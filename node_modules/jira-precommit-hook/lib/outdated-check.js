'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

var _package = require('../package.json');

var _requestPromise = require('request-promise');

var _requestPromise2 = _interopRequireDefault(_requestPromise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
    var rawResponse, latest, warning, arrow, updateCommand;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return (0, _requestPromise2.default)('https://registry.npmjs.org/' + _package.name + '/latest');

          case 3:
            rawResponse = _context.sent;
            latest = JSON.parse(rawResponse).version;


            if (_package.version !== latest) {
              warning = _chalk2.default.yellow('WARNING: You are using version ' + _package.version + ' of the ' + ('jira-precommit-hook. However, version ' + latest + ' has been ') + 'released. To update run:');
              arrow = _chalk2.default.grey('\n> ');
              updateCommand = _chalk2.default.green('npm install ' + _package.name + '@' + latest + ' --save-dev\n');

              console.warn(warning + arrow + updateCommand);
            }
            _context.next = 10;
            break;

          case 8:
            _context.prev = 8;
            _context.t0 = _context['catch'](0);

          case 10:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this, [[0, 8]]);
  }));

  function checkOutdated() {
    return _ref.apply(this, arguments);
  }

  return checkOutdated;
}();

module.exports = exports['default'];