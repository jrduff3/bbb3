'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var run = function () {
  var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
    var parser, args, exitCode;
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            parser = new _argparse.ArgumentParser({
              version: _package2.default.version,
              addHelp: true,
              description: 'jira-precommit-hook configuration utility'
            });


            (0, _cliCommands.register)(parser);

            args = parser.parseArgs();
            _context.next = 5;
            return (0, _cliCommands.execute)(args);

          case 5:
            exitCode = _context.sent;

            process.exit(exitCode);

          case 7:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function run() {
    return _ref.apply(this, arguments);
  };
}();

var _package = require('../package.json');

var _package2 = _interopRequireDefault(_package);

var _argparse = require('argparse');

var _cliCommands = require('./cli-commands');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

run();